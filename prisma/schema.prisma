generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Task {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  status          String
  tags            String[] @default([])
  highlightColor  String?

  dueDate         DateTime?
  priority        String?
  projectId       String?

  assignerEmail   String?
  assigneeEmail   String?
  assignerName    String?
  assigneeName    String?
  assigneeId      String?
  assigneeIds     String[] @default([])

  createdByClerkId String
   createdByName    String?      // ðŸ‘ˆ Add this
  createdByEmail   String?      // ðŸ‘ˆ Add this

  attachments     String[] @default([])
  paymentProofs   String[] @default([])

  amount          Float?
  received        Float?

  paymentHistory  Json[] @default([])
  customFields    Json?

  phone           String?
  email           String?
  shopName        String?
  location        String?
  accountNumber   String?
  ifscCode        String?
  restId          String?
  customerName    String?
  outletName      String?
  packageAmount   String?
  startDate       String?
  endDate         String?
  timeline        String?

  aadhaarUrl      String?
  panUrl          String?
  selfieUrl       String?
  chequeUrl       String?
  menuCardUrls    String[] @default([])

  // Relations
  notes           Note[]
  subtasks        Subtask[] @relation("TaskSubtasks")

  createdAt       DateTime @default(now())
  updatedAt       DateTime?
}

model Subtask {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  completed Boolean @default(false)

  taskId    String @db.ObjectId
  task      Task   @relation("TaskSubtasks", fields: [taskId], references: [id])
}

model Note {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  content      String
  createdAt    DateTime @default(now())

  authorName   String?
  authorEmail  String?

  taskId       String @db.ObjectId
  task         Task   @relation(fields: [taskId], references: [id])
}

model Goal {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  period          String   @unique
  revenueGoal     Float
  leadsGoal       Int
  collectionGoal  Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String   @unique
  email     String   @unique
  role      String   // "ADMIN", "MASTER", "SELLER"

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
